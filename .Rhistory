x <- list(a=1:5,b = rnorm(10))
lapply(x,mean)
x <- list(1:5,rnorm(10))
lapply(x,mean)
x <- list(a=1:5,b=rnorm(10))
lapply(x,mean)
lapply(x,runif)
lapply(x,runif, min = 8, max = 10)
x <- list(a=1:5,b=rnorm(10))
sapply(x,mean)
y <- sapply(x,mean)
y
y <- lapply(x,mean)
y
library(datasets)
head(airquality)
s <- split(airquailty,airquality$Month)
s <- split(airquality,airquality$Month)
s
f1 <- gl(2,5)
f1 <- gl(5,2)
f1
mean(x)
traceback()
mean(x)
traceback()
f1 <- gl(2,5)
traceback()
mean(x)
traceback()
lm(y - x)
traceback()
lm(y ~ x)
traceback()
x <-1
y <-0
x ~ y
z <- x ~ y
debug(lm)
lm(y ~ x)
lm(b ~ h)
q
q
options(error = recover)
read.csv("asdf")
library(datasets)
data(iris)
?iris
head(iris)
s <- split(iris, iris$Species)
s
sapply(iris,mean)
sapply(s,mean)
sapply(s[3],mean)
sapply(s(2),mean)
sapply(s$virginica,mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
head(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$hp, mtcars$cyl)
x <- split(mtcars$hp, mtcars$cyl)
sapply(x, mean)
y <- sapply(x, mean)
y
y[1]
y[1,2]
y[1] - y[3]
abs(y[1] - y[3])
debug(ls)
ls
ls(x)
spIns = split(InsectSprays$count,InsectSprays$spray)
spIns
sprCount = lapply(spIns,sum)
sprCount
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
install.pacakges("plyr")
install.pacakge("plyr")
install.packages("plyr")
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
spraySums
dim(spraySums)
head(spraySums)
library(dplyr)
install.packages("dplyr")
library(dplyr)
setwd("~/Documents/Data Analysis Coursae/GIthub/RepData_PeerAssessment2")
StormData <- read.csv("repdata-data-StormData.csv.bz2")
StormData$BGN_DATE <- as.Date(StormData$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
WorkingData <- subset(StormData, BGN_DATE >= "1996-01-01")
HumanFatal <- aggregate(FATALITIES ~ EVTYPE,WorkingData,sum)
HumanInjury <- aggregate(INJURIES ~ EVTYPE,WorkingData,sum)
HumanImpact <- merge(HumanInjury, HumanFatal, by = "EVTYPE")
HumanImpact <- subset(HumanImpact, (INJURIES > 0 & FATALITIES > 0))
HumanImpact$Combined <- HumanImpact$INJURIES + HumanImpact$FATALITIES
HumanImpact <- HumanImpact[order(-HumanImpact$Combined),]
plotdata <- HumanImpact[1:10, 1:4]
plotdata$EVTYPE <- factor(plotdata$EVTYPE)
n = c(plotdata$INJURIES)
s = c(plotdata$FATALITIES)
df = data.frame(n, s)
dft <- t(df)
colnames(dft) <- plotdata$EVTYPE
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2)
par(4)
par(mar=c(5))
par(mar=c(5,1,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2)
par(mar=c(5,5,5,5))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2)
par(mar=c(10,3,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2)
par(mar=c(7,5,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2)
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2, xlab="Event",ylab = "Count of Injuries/Fatalities", legend = c("Fatalities","Injuries"))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2, xlab="Event",ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"))
par(mar=c(7,7,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"))
par(mar=c(7,5,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(2,0,0))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(2,1,1))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(2,0,0))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2, xlab="Event",ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(2,0,0))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(5,.5,.5))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(5,.5,0))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(5,0,0))
barplot(as.matrix(dft),cex.names = .6,col=c("black","red"),las = 2,ylab = "Count of Injuries/Fatalities", legend = c("Injuries","Fatalities"),mgp=c(3,.5,0))
head(WorkingData)
unique(WorkingData$PROPDMGEXP)
unique(WorkingData$CROPDMGEXP)
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
View(EconData)
colnames(EconData) <- c(EVTYPE,PROPDMG,PROPDMGEXP,CROPDMG)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG")
View(EconData)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
View(EconData)
?sapply
EconData <- subset(EconData, (PROPDMG > 0 & CROPDMG > 0))
View(EconData)
unique(EconData$PROPDMG)
unique(EconData$PROPDMGEXP)
?mapvalues
library(plyr)
view(EconData)
View(EconData)
unique(EconData$CROPDMGEXP)
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
View(EconData)
EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
View(EconData)
tester <- EconData$PROPDMG * EconData$PROPDMGEXP
tester <- EconData
tester$PROPDMG <- EconData$PROPDMG * EconData$PROPDMGEXP
class(EconData$PROPDMG)
class(EconData$PROPDMGEXP)
EconData$CROPDMGEXP <- as.numeric(mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000)))
EconData$PROPDMGEXP < as.numeric(EconData$PROPDMGEXP)
EconData$CROPDMGEXP < as.numeric(EconData$CROPDMGEXP)
class(EconData$PROPDMGEXP)
EconData$PROPDMGEXP < sapply(EconData$PROPDMGEXP,as.numeric())
EconData$PROPDMGEXP < sapply(EconData$PROPDMGEXP,as.numeric
)
EconData$PROPDMGEXP <- sapply(EconData$PROPDMGEXP,as.numeric)
class(EconData$PROPDMGEXP)
EconData$PROPDMG <- EconData$PROPDMG * EconData$PROPDMGEXP
View(EconData)
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
View(EconData)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
EconData <- subset(EconData, (PROPDMG > 0 & CROPDMG > 0))
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
View(EconData)
EconData$PROPDMGEXP <- sapply(EconData$PROPDMGEXP,as.numeric)
View(EconData)
unique(EconData$PROPDMGEXP)
EconData$PROPDMG <- EconData$PROPDMG * EconData$PROPDMGEXP
View(EconData)
unique(EconData$CROPDMGEXP)
EconData$CROPDMGEXP <- factor(EconData$CROPDMGEXP)
View(EconData)
unique(EconData$CROPDMGEXP)
EconData$CROPDMGEXP <- sapply(EconData$CROPDMGEXP,as.numeric)
View(EconData)
unique(EconData$CROPDMGEXP)
class(EconData$PROPDMG)
> EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
EconData <- subset(EconData, (PROPDMG > 0 & CROPDMG > 0))
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
> EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000)) EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
unique(EconData$CROPDMGEXP)
View(EconData)
EconData$CROPDMGEXP <- as.character(EconData$CROPDMGEXP)
View(EconData)
unique(EconData$CROPDMGEXP)
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
EconData <- subset(EconData, (PROPDMG > 0 & CROPDMG > 0))
EconData$PROPDMGEXP <- as.character(EconData$PROPDMGEXP)
EconData$CROPDMGEXP <- as.character(EconData$CROPDMGEXP)
unique(EconData$CROPDMGEXP)
unique(EconData$PROPDMGEXP)
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$PROPDMGEXP <- sapply(EconData$PROPDMGEXP,as.numeric)
EconData$CROPDMGEXP <- sapply(EconData$CROPDMGEXP,as.numeric)
View(EconData)
EconData$PROPDMG <- EconData$PROPDMG * EconData$PROPDMGEXP
View(EconData)
EconData$CROPDMG <- EconData$PROPDMG * EconData$CROPDMGEXP
View(EconData)
EconData = data.frame(factor(WorkingData$EVTYPE),WorkingData$PROPDMG,WorkingData$PROPDMGEXP,WorkingData$CROPDMG,WorkingData$CROPDMGEXP)
colnames(EconData) <- c("EVTYPE","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
EconData <- subset(EconData, (PROPDMG > 0 & CROPDMG > 0))
EconData$PROPDMGEXP <- as.character(EconData$PROPDMGEXP)
EconData$CROPDMGEXP <- as.character(EconData$CROPDMGEXP)
EconData$PROPDMGEXP <- mapvalues(EconData$PROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$CROPDMGEXP <- mapvalues(EconData$CROPDMGEXP,c("K","M","B"),c(1000,1000000,1000000000))
EconData$PROPDMGEXP <- sapply(EconData$PROPDMGEXP,as.numeric)
EconData$CROPDMGEXP <- sapply(EconData$CROPDMGEXP,as.numeric)
View(EconData)
EconData$PROPDMG <- EconData$PROPDMG * EconData$PROPDMGEXP
EconData$CROPDMG <- EconData$CROPDMG * EconData$CROPDMGEXP
head(EconData)
