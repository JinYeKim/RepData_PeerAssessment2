x <- list(a=1:5,b = rnorm(10))
lapply(x,mean)
x <- list(1:5,rnorm(10))
lapply(x,mean)
x <- list(a=1:5,b=rnorm(10))
lapply(x,mean)
lapply(x,runif)
lapply(x,runif, min = 8, max = 10)
x <- list(a=1:5,b=rnorm(10))
sapply(x,mean)
y <- sapply(x,mean)
y
y <- lapply(x,mean)
y
library(datasets)
head(airquality)
s <- split(airquailty,airquality$Month)
s <- split(airquality,airquality$Month)
s
f1 <- gl(2,5)
f1 <- gl(5,2)
f1
mean(x)
traceback()
mean(x)
traceback()
f1 <- gl(2,5)
traceback()
mean(x)
traceback()
lm(y - x)
traceback()
lm(y ~ x)
traceback()
x <-1
y <-0
x ~ y
z <- x ~ y
debug(lm)
lm(y ~ x)
lm(b ~ h)
q
q
options(error = recover)
read.csv("asdf")
library(datasets)
data(iris)
?iris
head(iris)
s <- split(iris, iris$Species)
s
sapply(iris,mean)
sapply(s,mean)
sapply(s[3],mean)
sapply(s(2),mean)
sapply(s$virginica,mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
head(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$hp, mtcars$cyl)
x <- split(mtcars$hp, mtcars$cyl)
sapply(x, mean)
y <- sapply(x, mean)
y
y[1]
y[1,2]
y[1] - y[3]
abs(y[1] - y[3])
debug(ls)
ls
ls(x)
spIns = split(InsectSprays$count,InsectSprays$spray)
spIns
sprCount = lapply(spIns,sum)
sprCount
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
install.pacakges("plyr")
install.pacakge("plyr")
install.packages("plyr")
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
library(plyr)
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
spraySums
dim(spraySums)
head(spraySums)
library(dplyr)
install.packages("dplyr")
library(dplyr)
sessionInfo()
library(ggplot)
library(stats)
sessionInfo()
setwd("~/Documents/Data Analysis Coursae/GIthub/RepData_PeerAssessment2")
StormData <- read.csv("repdata-data-StormData.csv.bz2")
head(StormData)
b <- as.Date(StormData$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
sum(is.na(b))
StormData$BGN_DATE <- as.Date(StormData$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
class(StormData$BGN_DATE)
View(StormData)
WorkingData <- subset(StormData, BGN_DATE >= "1996-02-01")
head(WorkingData)
HumanImpact <- aggregate(EVTYPE ~ FATALITIES + INJURIES,WorkingData,sum)
HumanImpact <- aggregate(EVTYPE ~ FATALITIES,WorkingData,sum)
HumanImpact <- aggregate(FATALITIES ~ EVTYPE,WorkingData,sum)
plot(HumanImpact)
HumanFatal <- aggregate(FATALITIES ~ EVTYPE,WorkingData,sum)
HumanInjury <- aggregate(INJURIES ~ EVTYPE,WorkingData,sum)
plot(HumanInjury)
test <- merge(HumanInjury, HumanFatal, by = "EVTYPE")
plot(test)
head(test)
View(HumanInjury)
View(HumanInjury)
View(HumanImpact)
View(HumanImpact)
View(HumanImpact)
HumanFatal <- aggregate(FATALITIES ~ EVTYPE,WorkingData,sum)
HumanInjury <- aggregate(INJURIES ~ EVTYPE,WorkingData,sum)
HumanImpact <- merge(HumanInjury, HumanFatal, by = "EVTYPE")
View(HumanImpact)
?adist
HumanImpact <- subset(HumanImpact, (INJURIES > 0 & FATALITIES > 0))
View(HumanImpact)
View(HumanImpact)
?gsub
fileUrl <- "http://www.ncdc.noaa.gov/stormevents/pd01016005curr.pdf"
download.file(fileUrl,method = "curl")
download.file(fileUrl,destfile = "./nws_i10_1605.pdf", method = "curl")
pdf <- readPDF(control = list(c(text = "-layout")))
library(tm)
install.packages("tm")
library(tm)
pdf <- readPDF(control = list(c(text = "-layout")))
pdf <- pdf(elem=list(uri="nws_i10_1605.pdf"),language="en")
weather48 <- c("Astronomical Low Tide", "Avalanche", "Blizzard", "Coastal Flood", "Cold/Wind Chill", "Debris Flow" , "Dense Fog", "Dense Smoke", "Drought", "Dust Devil", "Dust Storm", "Excessive Heat", "Extreme Cold/Wind Chill", "Flash Flood", "Flood", "Frost/Freeze", "Funnel Cloud", "Freezing Fog", "Hail", "Heat", "Heavy Rain", "Heavy Snow", "High Surf", "High Wind","Hurricane (Typhoon)", "Ice Storm", "Lake-Effect Snow", "Lakeshore Flood", "Lightning", "Marine Hail", "Marine High Wind", "Marine Strong Wind", "Marine Thunderstorm Wind", "Rip Current", "Seiche", "Sleet", "Storm Surge/Tide", "Strong Wind", "Thunderstorm Wind", "Tornado", "Tropical Depression", "Tropical Storm", "Tsunami", "V olcanic Ash", "Waterspout", "Wildfire", "Winter Storm", "Winter Weather")
head(HumanImpact)
HumanImpact$Combined <- ifelse(HumanImpact$EVTYPE %in% weather48, HumanImpact$EVTYPE, 'OTHER')
View(HumanImpact)
View(HumanImpact)
class(weather48)
weather48
?grepl
txt <- c("The", "licenses", "for", "most", "software", "are",
"designed", "to", "take", "away", "your", "freedom",
"to", "share", "and", "change", "it.",
"", "By", "contrast,", "the", "GNU", "General", "Public", "License",
"is", "intended", "to", "guarantee", "your", "freedom", "to",
"share", "and", "change", "free", "software", "--",
"to", "make", "sure", "the", "software", "is",
"free", "for", "all", "its", "users")
gsub("g","#", txt, ignore.case = TRUE)
HumanImpact$Combined <- HumanImpact$INJURIES + HumanImpact$FATALITIES
View(HumanImpact)
View(HumanImpact)
?sort
class(HumanImpact)
a <- order(HumanImpact$Combined)
a
a <- order(HumanImpact)
a <- HumanImpact[order(Combined)]
head(HumanImpact)
a <- HumanImpact[order(Combined),]
a <- HumanImpact
a <- a[order(Combined),]
a <- a[order(a$Combined),]
head(a)
a <- a[order(-a$Combined),]
head(a)
?counts
?count
?table
b <- table(a$EVTYPE,a$INJURIES,a$FATALITIES)
barplot(b)
counts <- table(mtcars$vs, mtcars$gear)
counts
b <- table(a$INJURIES,a$FATALITIES)
b
b <- table(a$INJURIES,a$EVTYPE)
?barplot
head(b)
View(HumanImpact)
HumanImpact <- HumanImpact[order(-HumanImpact$Combined),]
head(HumanImpact)
View(HumanImpact)
View(HumanImpact)
barplot(HumanImpact$EVTYPE)
class(HumanImpact$EVTYPE)
plotdata <- HumanImpact[1:10, 2:4]
View(plotdata)
View(plotdata)
plotdata <- HumanImpact[1:10, 1:3]
View(plotdata)
plotmatrix <- data.matrix(plotdata, rownames.force = NA)
View(plotmatrix)
barplot(plotmatrix)
counts <- table(mtcars$vs, mtcars$gear)
counts
plotdata
t(plotdata)
barplot(t(plotmatrix))
names(plotmatrix)
